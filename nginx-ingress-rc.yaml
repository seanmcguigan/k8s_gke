# Creates a loadbalancer on choosen cloud platform
apiVersion: v1
kind: Service
metadata:
  name: nginx-ingress
spec:
  type: LoadBalancer #<-- Creates L4 loadbalancer
  ports:
    - port: 80 #<-- the LB listens on this port
      name: http
    - port: 443 #<-- the LB listens on this port
      name: https
  selector:
    app: nginx-ingress #<-- alltraffic is passed to this label
---
# You need an Ingress controller to satisfy an Ingress - listens for Ingresses from the master
apiVersion: v1
kind: ReplicationController
metadata:
  name: nginx-ingress-rc
  labels:
    app: nginx-ingress #<--this is the target label for the service above
spec:
  replicas: 3
  selector:
    app: nginx-ingress
  template:
    metadata:
      labels:
        app: nginx-ingress
    spec:
      containers:
      - image: gcr.io/google_containers/nginx-ingress-controller:0.9.0-beta.15 # nginxdemos/nginx-ingress:1.0.0
        imagePullPolicy: Always
        name: nginx-ingress
        ports: # the container listens on 80 and 443 - the nodePort is assigned dynamically
        - containerPort: 80
          hostPort: 80
        - containerPort: 443
          hostPort: 443
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        # Uncomment the lines below to enable extensive logging and/or customization of
        # NGINX configuration with configmaps
        args:
         #- -v=3
         #- -nginx-configmaps=$(POD_NAMESPACE)/nginx-config
          - -default-server-tls-secret=$(POD_NAMESPACE)/default-server-secret
